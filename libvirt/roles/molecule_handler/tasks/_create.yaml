# ./roles/molecule_handler/tasks/_create.yaml

- name: Transform Molecule var structure into usable dicts
  ansible.builtin.include_role:
    name: nsys.libvirt.molecule_transformer
  vars:
    state: present

- name: Setup libvirt networks
  ansible.builtin.include_tasks: "networks/create.yaml"
  when: NETWORK_SPECS is defined and NETWORK_SPECS | length > 0

- name: Setup libvirt storage pool
  ansible.builtin.include_tasks: "pools/create.yaml"

- name: Setup libvirt domains
  ansible.builtin.include_tasks: "domains/create.yaml"
  when: DOMAIN_SPECS is defined and DOMAIN_SPECS | length > 0

- name: Clone Domains if needed
  ansible.builtin.include_tasks: "clones/create.yaml"
  when: CLONE_SPECS is defined and CLONE_SPECS | length > 0

- name: Setup libvirt disks
  ansible.builtin.include_tasks: "disks/create.yaml"
  when: DISK_SPECS is defined and DISK_SPECS | length > 0



#- name: Create cloud-init config for VMs to be provisioned
#  ansible.builtin.include_role:
#    name: nsys.libvirt.cloud_init_config
#  when: DOMAIN_SPECS is defined and DOMAIN_SPECS | length > 0
# will be moved to seperate collection


- name: Attache devices to domains
  ansible.builtin.include_tasks: "devices/create.yaml"

- name: Start VMs
  nsys.libvirt.domain.power_state:
    name: "{{ item.name }}"
    state: "{{ item.power_state | default('running') }}"
  loop: "{{ DOMAIN_SPECS }}"

- name: Final message
  ansible.builtin.debug:
    msg: "VMs are up and running - handing off to populate molecule inventory"

- name: Include actions
  ansible.builtin.include_tasks: "_populate.yaml"
